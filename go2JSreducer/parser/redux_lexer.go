// Generated from Redux.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 23, 155,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4,
	3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 6, 3, 7, 3, 7,
	3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3,
	12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14,
	3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3,
	18, 3, 18, 3, 19, 3, 19, 3, 20, 6, 20, 129, 10, 20, 13, 20, 14, 20, 130,
	3, 20, 3, 20, 3, 21, 3, 21, 7, 21, 137, 10, 21, 12, 21, 14, 21, 140, 11,
	21, 3, 22, 5, 22, 143, 10, 22, 3, 23, 3, 23, 5, 23, 147, 10, 23, 3, 24,
	6, 24, 150, 10, 24, 13, 24, 14, 24, 151, 3, 25, 3, 25, 2, 2, 26, 3, 3,
	5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13,
	25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22,
	43, 2, 45, 2, 47, 23, 49, 2, 3, 2, 6, 5, 2, 11, 12, 15, 15, 34, 34, 16,
	2, 67, 92, 97, 97, 99, 124, 194, 216, 218, 248, 250, 769, 882, 895, 897,
	8193, 8206, 8207, 8306, 8593, 11266, 12273, 12291, 55297, 63746, 64977,
	65010, 65535, 6, 2, 50, 59, 185, 185, 770, 881, 8257, 8258, 3, 2, 50, 59,
	2, 155, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3,
	2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17,
	3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2,
	25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2,
	2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2,
	2, 2, 41, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 3, 51, 3, 2, 2, 2, 5, 56, 3, 2,
	2, 2, 7, 58, 3, 2, 2, 2, 9, 70, 3, 2, 2, 2, 11, 72, 3, 2, 2, 2, 13, 79,
	3, 2, 2, 2, 15, 81, 3, 2, 2, 2, 17, 83, 3, 2, 2, 2, 19, 85, 3, 2, 2, 2,
	21, 92, 3, 2, 2, 2, 23, 102, 3, 2, 2, 2, 25, 104, 3, 2, 2, 2, 27, 110,
	3, 2, 2, 2, 29, 114, 3, 2, 2, 2, 31, 119, 3, 2, 2, 2, 33, 121, 3, 2, 2,
	2, 35, 123, 3, 2, 2, 2, 37, 125, 3, 2, 2, 2, 39, 128, 3, 2, 2, 2, 41, 134,
	3, 2, 2, 2, 43, 142, 3, 2, 2, 2, 45, 146, 3, 2, 2, 2, 47, 149, 3, 2, 2,
	2, 49, 153, 3, 2, 2, 2, 51, 52, 7, 104, 2, 2, 52, 53, 7, 119, 2, 2, 53,
	54, 7, 112, 2, 2, 54, 55, 7, 101, 2, 2, 55, 4, 3, 2, 2, 2, 56, 57, 7, 42,
	2, 2, 57, 6, 3, 2, 2, 2, 58, 59, 7, 107, 2, 2, 59, 60, 7, 112, 2, 2, 60,
	61, 7, 118, 2, 2, 61, 62, 7, 103, 2, 2, 62, 63, 7, 116, 2, 2, 63, 64, 7,
	104, 2, 2, 64, 65, 7, 99, 2, 2, 65, 66, 7, 101, 2, 2, 66, 67, 7, 103, 2,
	2, 67, 68, 7, 125, 2, 2, 68, 69, 7, 127, 2, 2, 69, 8, 3, 2, 2, 2, 70, 71,
	7, 46, 2, 2, 71, 10, 3, 2, 2, 2, 72, 73, 7, 67, 2, 2, 73, 74, 7, 101, 2,
	2, 74, 75, 7, 118, 2, 2, 75, 76, 7, 107, 2, 2, 76, 77, 7, 113, 2, 2, 77,
	78, 7, 112, 2, 2, 78, 12, 3, 2, 2, 2, 79, 80, 7, 43, 2, 2, 80, 14, 3, 2,
	2, 2, 81, 82, 7, 125, 2, 2, 82, 16, 3, 2, 2, 2, 83, 84, 7, 127, 2, 2, 84,
	18, 3, 2, 2, 2, 85, 86, 7, 117, 2, 2, 86, 87, 7, 118, 2, 2, 87, 88, 7,
	116, 2, 2, 88, 89, 7, 119, 2, 2, 89, 90, 7, 101, 2, 2, 90, 91, 7, 118,
	2, 2, 91, 20, 3, 2, 2, 2, 92, 93, 7, 107, 2, 2, 93, 94, 7, 112, 2, 2, 94,
	95, 7, 118, 2, 2, 95, 96, 7, 103, 2, 2, 96, 97, 7, 116, 2, 2, 97, 98, 7,
	104, 2, 2, 98, 99, 7, 99, 2, 2, 99, 100, 7, 101, 2, 2, 100, 101, 7, 103,
	2, 2, 101, 22, 3, 2, 2, 2, 102, 103, 7, 63, 2, 2, 103, 24, 3, 2, 2, 2,
	104, 105, 7, 101, 2, 2, 105, 106, 7, 113, 2, 2, 106, 107, 7, 112, 2, 2,
	107, 108, 7, 117, 2, 2, 108, 109, 7, 118, 2, 2, 109, 26, 3, 2, 2, 2, 110,
	111, 7, 120, 2, 2, 111, 112, 7, 99, 2, 2, 112, 113, 7, 116, 2, 2, 113,
	28, 3, 2, 2, 2, 114, 115, 7, 118, 2, 2, 115, 116, 7, 123, 2, 2, 116, 117,
	7, 114, 2, 2, 117, 118, 7, 103, 2, 2, 118, 30, 3, 2, 2, 2, 119, 120, 7,
	45, 2, 2, 120, 32, 3, 2, 2, 2, 121, 122, 7, 47, 2, 2, 122, 34, 3, 2, 2,
	2, 123, 124, 7, 44, 2, 2, 124, 36, 3, 2, 2, 2, 125, 126, 7, 49, 2, 2, 126,
	38, 3, 2, 2, 2, 127, 129, 9, 2, 2, 2, 128, 127, 3, 2, 2, 2, 129, 130, 3,
	2, 2, 2, 130, 128, 3, 2, 2, 2, 130, 131, 3, 2, 2, 2, 131, 132, 3, 2, 2,
	2, 132, 133, 8, 20, 2, 2, 133, 40, 3, 2, 2, 2, 134, 138, 5, 43, 22, 2,
	135, 137, 5, 45, 23, 2, 136, 135, 3, 2, 2, 2, 137, 140, 3, 2, 2, 2, 138,
	136, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 139, 42, 3, 2, 2, 2, 140, 138, 3,
	2, 2, 2, 141, 143, 9, 3, 2, 2, 142, 141, 3, 2, 2, 2, 143, 44, 3, 2, 2,
	2, 144, 147, 5, 43, 22, 2, 145, 147, 9, 4, 2, 2, 146, 144, 3, 2, 2, 2,
	146, 145, 3, 2, 2, 2, 147, 46, 3, 2, 2, 2, 148, 150, 5, 49, 25, 2, 149,
	148, 3, 2, 2, 2, 150, 151, 3, 2, 2, 2, 151, 149, 3, 2, 2, 2, 151, 152,
	3, 2, 2, 2, 152, 48, 3, 2, 2, 2, 153, 154, 9, 5, 2, 2, 154, 50, 3, 2, 2,
	2, 8, 2, 130, 138, 142, 146, 151, 3, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'func'", "'('", "'interface{}'", "','", "'Action'", "')'", "'{'",
	"'}'", "'struct'", "'interface'", "'='", "'const'", "'var'", "'type'",
	"'+'", "'-'", "'*'", "'/'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "WS", "Ident", "Number",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "WS", "Ident", "StartLetter", "Letter", "Number", "Digit",
}

type ReduxLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewReduxLexer(input antlr.CharStream) *ReduxLexer {

	l := new(ReduxLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Redux.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ReduxLexer tokens.
const (
	ReduxLexerT__0   = 1
	ReduxLexerT__1   = 2
	ReduxLexerT__2   = 3
	ReduxLexerT__3   = 4
	ReduxLexerT__4   = 5
	ReduxLexerT__5   = 6
	ReduxLexerT__6   = 7
	ReduxLexerT__7   = 8
	ReduxLexerT__8   = 9
	ReduxLexerT__9   = 10
	ReduxLexerT__10  = 11
	ReduxLexerT__11  = 12
	ReduxLexerT__12  = 13
	ReduxLexerT__13  = 14
	ReduxLexerT__14  = 15
	ReduxLexerT__15  = 16
	ReduxLexerT__16  = 17
	ReduxLexerT__17  = 18
	ReduxLexerWS     = 19
	ReduxLexerIdent  = 20
	ReduxLexerNumber = 21
)
